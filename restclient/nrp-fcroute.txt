# -*- restclient -*-
# Settings
:host = http://localhost:8181
:basic-auth := (format "Basic %s" (base64-encode-string (format "%s:%s" "admin" "admin")))

# Create FcRoute
POST :host/restconf/config/CoreModel-CoreNetworkModule-ObjectClasses:FcRouteList
Authorization: :basic-auth
Content-Type: application/json
{
   "FcRoute": {
       "id" : "new-route",
       "ForwardingConstruct": [
       {
          "uuid": "an-original-name",
          "FcPort": [ {
                     "id": "a-end",
                     "_ltpRefList": [ "host-a:a-end-ltp" ]
                     }, {
                     "id": "z-end",
                     "_ltpRefList": [ "host-z:z-end-ltp" ]
                     } ],
          "forwardingDirection": "BIDIRECTIONAL",
          "layerProtocolName": "funky-layer-protocol",
          "_fcSpecRef": "nonexistent-fcspec"
       }
   ] }
}

# Delete FcRoute
DELETE :host/restconf/config/CoreModel-CoreNetworkModule-ObjectClasses:FcRouteList/FcRoute/new-route
Authentication: :basic-auth

# List FcRoute
GET :host/restconf/config/CoreModel-CoreNetworkModule-ObjectClasses:FcRouteList
Authorization: :basic-auth

# Create FcRoute
POST :host/restconf/config/CoreModel-CoreNetworkModule-ObjectClasses:FcRouteList
Authorization: :basic-auth
Content-Type: application/json
{
   "FcRoute": {
       "id" : "single-host",
       "ForwardingConstruct": [
       {
          "uuid": "single-host",
          "FcPort": [ {
                     "id": "a-end",
                     "_ltpRefList": [ "asr-101:GigabitEthernet0/0/1/19" ]
                     }, {
                     "id": "z-end",
                     "_ltpRefList": [ "asr-101:GigabitEthernet0/0/1/17" ]
                     } ],
          "forwardingDirection": "BIDIRECTIONAL",
          "layerProtocolName": "funky-layer-protocol",
          "_fcSpecRef": "nonexistent-fcspec"
       }
   ] }
}

# Delete FcRoute
DELETE :host/restconf/config/CoreModel-CoreNetworkModule-ObjectClasses:FcRouteList/FcRoute/single-host
Authentication: :basic-auth


# Get l2vpn
:node = asr-101
GET :host/restconf/operational/network-topology:network-topology/topology/topology-netconf/node/:node/yang-ext:mount/Cisco-IOS-XR-l2vpn-cfg:l2vpn/database/xconnect-groups/xconnect-group/local
Authorization: :basic-auth
Accept: application/xml

# Delete p2p xconnect
:name = fortinet
GET :host/restconf/operational/network-topology:network-topology/topology/topology-netconf/node/:node/yang-ext:mount/Cisco-IOS-XR-l2vpn-cfg:l2vpn/database/xconnect-groups/xconnect-group/local/p2p-xconnects/p2p-xconnect/fortinet
Authorization: :basic-auth
Accept: application/xml
